---
- name: Ensure staging instances are running and inventory is updated
  hosts: localhost
  gather_facts: no
  vars:
    instance_name: Staging_k8s
    region: us-east-1
    group: ec2_staging

  tasks:
    - name: Gather facts to check if the staging instance already exists
      ec2_instance_info:
        region: "{{ region }}"
        filters:
          instance-state-name: running
          tag:Name: "{{ instance_name }}"
      register: ec2_exists

    - name: Fail if no running instances are found
      fail:
        msg: "No running staging instances found. Please provision the staging environment."
      when: ec2_exists.instances | length == 0

    - name: Update inventory with dynamic public IPs
      add_host:
        name: "{{ item.public_ip_address }}"
        groups: "{{ group }}"
      loop: "{{ ec2_exists.instances }}"
      when: item.public_ip_address is defined

- name: Deploy Application on Staging Instance
  hosts: ec2_staging
  remote_user: ubuntu
  become: yes
  become_method: sudo

  tasks:
    - name: Copy k8s-configmap.yaml file
      copy:
        src: ../k8s-configmap.yaml
        dest: /home/ubuntu/k8s-configmap.yaml
        mode: '0644'

    - name: Apply k8s-configmap.yaml file
      kubernetes.core.k8s:
        state: present
        namespace: default
        src: /home/ubuntu/k8s-configmap.yaml
        validate_certs: false
      environment:
        KUBECONFIG: /home/ubuntu/.kube/config

    - name: Copy k8s-deployment.yaml file
      copy:
        src: ../k8s-deployment.yaml
        dest: /home/ubuntu/k8s-deployment.yaml
        mode: '0644'

    - name: Apply k8s-deployment.yaml file
      kubernetes.core.k8s:
        state: present
        namespace: default
        src: /home/ubuntu/k8s-deployment.yaml
        validate_certs: false
      environment:
        KUBECONFIG: /home/ubuntu/.kube/config

    - name: Copy k8s-service.yaml file
      copy:
        src: ../k8s-service.yaml
        dest: /home/ubuntu/k8s-service.yaml
        mode: '0644'

    - name: Apply k8s-service.yaml file
      kubernetes.core.k8s:
        state: present
        namespace: default
        src: /home/ubuntu/k8s-service.yaml
        validate_certs: false
      environment:
        KUBECONFIG: /home/ubuntu/.kube/config

    - name: Rolling update (update deployment image to specific tag if needed)
      shell: kubectl set image deployment/assignment-2-app assignment-2-app=rabiaqamar/assignment-2-app:{{ tag }} --namespace=default --record
      args:
        executable: /bin/bash
      environment:
        KUBECONFIG: /home/ubuntu/.kube/config

